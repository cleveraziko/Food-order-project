{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotal = state.totalAmount + action.item.price + action.item.amount;\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotal\n    };\n  }\n\n  return defaultCartState;\n};\n\nfunction CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchcartaction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemHandler = item => {\n    dispatchcartaction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchcartaction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartProvider, \"BM9ezxqaI+5L0/tw/M3C5IG+cNU=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/01-starting-project/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotal","item","price","amount","updatedItems","concat","CartProvider","props","cartState","dispatchcartaction","addItemHandler","removeItemHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,YAAY,GAChBH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAhC,GAAwCJ,MAAM,CAACG,IAAP,CAAYE,MADtD;AAGA,UAAMC,YAAY,GAAGP,KAAK,CAACH,KAAN,CAAYW,MAAZ,CAAmBP,MAAM,CAACG,IAA1B,CAArB;AACA,WAAO;AACLP,MAAAA,KAAK,EAAEU,YADF;AAELT,MAAAA,WAAW,EAAEK;AAFR,KAAP;AAID;;AAED,SAAOP,gBAAP;AACD,CAbD;;AAeA,SAASa,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;AAIA,QAAMiB,cAAc,GAAIT,IAAD,IAAU;AAC/BQ,IAAAA,kBAAkB,CAAC;AACjBV,MAAAA,IAAI,EAAE,KADW;AAEjBE,MAAAA,IAAI,EAAEA;AAFW,KAAD,CAAlB;AAID,GALD;;AAMA,QAAMU,iBAAiB,GAAIC,EAAD,IAAQ;AAChCH,IAAAA,kBAAkB,CAAC;AACjBV,MAAAA,IAAI,EAAE,QADW;AAEjBa,MAAAA,EAAE,EAAEA;AAFa,KAAD,CAAlB;AAID,GALD;;AAMA,QAAMC,WAAW,GAAG;AAClBnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADC;AAElBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFL;AAGlBmB,IAAAA,OAAO,EAAEJ,cAHS;AAIlBK,IAAAA,UAAU,EAAEJ;AAJM,GAApB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGN,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA5BQV,Y;;KAAAA,Y;AA8BT,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === 'ADD') {\r\n    const updatedTotal =\r\n      state.totalAmount + action.item.price + action.item.amount;\r\n\r\n    const updatedItems = state.items.concat(action.item);\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotal,\r\n    };\r\n  }\r\n\r\n  return defaultCartState;\r\n};\r\n\r\nfunction CartProvider(props) {\r\n  const [cartState, dispatchcartaction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n  const addItemHandler = (item) => {\r\n    dispatchcartaction({\r\n      type: 'ADD',\r\n      item: item,\r\n    });\r\n  };\r\n  const removeItemHandler = (id) => {\r\n    dispatchcartaction({\r\n      type: 'REMOVE',\r\n      id: id,\r\n    });\r\n  };\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemHandler,\r\n    removeItem: removeItemHandler,\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}